/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smartwatchsim.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.Timer;
import javax.swing.WindowConstants;
import smartwatchsim.sync.ApiException;
import smartwatchsim.sync.TrainingData;
import smartwatchsim.sync.SmartWatchApi;

public class UploadDialog extends javax.swing.JDialog {

    //private static final String SERVER_URL = "http://localhost:5000/";
    private TrainingData datosEntrenamiento;

    public UploadDialog(java.awt.Frame parent, TrainingData datosEntrenamiento) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        this.datosEntrenamiento = datosEntrenamiento;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        icon = new JLabel();
        JLabel jLabel2 = new JLabel();
        enviar = new JButton();
        eliminar = new JButton();
        mensaje = new JLabel();
        JLabel jLabel1 = new JLabel();
        serverField = new JTextField();
        JLabel jLabel3 = new JLabel();
        usernameField = new JTextField();
        JLabel jLabel4 = new JLabel();
        passwordField = new JPasswordField();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Enviar resultados");

        icon.setIcon(new ImageIcon(getClass().getResource("/smartwatchsim/gui/assets/icons8-cloud.png"))); // NOI18N

        jLabel2.setText("¿Enviar resultados del entrenamieto al servidor?");

        enviar.setText("Enviar");
        enviar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        mensaje.setText("     ");

        jLabel1.setText("Servidor");

        serverField.setText("http://localhost:5000/");

        jLabel3.setText("Usuario");

        jLabel4.setText("Contraseña");

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(icon)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1))
                                .addGap(7, 7, 7))
                            .addGroup(GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(mensaje, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(enviar)
                                .addGap(18, 18, 18)
                                .addComponent(eliminar))
                            .addComponent(usernameField)
                            .addComponent(passwordField)
                            .addComponent(serverField))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(serverField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(usernameField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(passwordField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(enviar)
                            .addComponent(eliminar)
                            .addComponent(mensaje)))
                    .addComponent(icon))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        dispose();
    }//GEN-LAST:event_eliminarActionPerformed

    private void enviarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        this.enviar.setEnabled(false);
        this.eliminar.setEnabled(false);

        this.icon.setIcon(new ImageIcon(getClass().getResource("/smartwatchsim/gui/assets/icons8-upload_to_cloud.png")));
        this.mensaje.setText("Enviando...");

        Timer timer = new Timer(2000, (e) -> {
            try {
                String server = this.serverField.getText();
                String username = this.usernameField.getText();
                String password = new String(this.passwordField.getPassword());
                
                new SmartWatchApi(server, username, password).sendEntrenamiento(this.datosEntrenamiento);
                this.mensaje.setText("¡Enviado!");
                this.enviar.setVisible(false);
                this.eliminar.setText("OK");
                this.icon.setIcon(new ImageIcon(getClass().getResource("/smartwatchsim/gui/assets/icons8-good_quality.png")));
            } catch (ApiException ex) {
                //ex.printStackTrace();
                this.mensaje.setText("Error...");
                this.enviar.setText("Reintentar");
                this.icon.setIcon(new ImageIcon(getClass().getResource("/smartwatchsim/gui/assets/icons8-poor_quality.png")));
            }
            this.enviar.setEnabled(true);
            this.eliminar.setEnabled(true);
        });

        timer.setRepeats(false);
        timer.start();
    }//GEN-LAST:event_enviarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton eliminar;
    private JButton enviar;
    private JLabel icon;
    private JLabel mensaje;
    private JPasswordField passwordField;
    private JTextField serverField;
    private JTextField usernameField;
    // End of variables declaration//GEN-END:variables
}
