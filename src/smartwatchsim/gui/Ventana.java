package smartwatchsim.gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import java.util.Locale;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.SwingConstants;
import javax.swing.WindowConstants;
import smartwatchsim.modules.Trackpoint;
import smartwatchsim.modules.Training;
import smartwatchsim.sensors.GpsSensor;
import smartwatchsim.sensors.HeartRateSensor;
import smartwatchsim.sync.TrainingData;

public class Ventana extends javax.swing.JFrame {

    private StopWatch stopWatch;
    private Training training;
    private boolean isTraining;
    private HeartRateSensor heartRateSensor;
    private GpsSensor gpsSensor;

    public Ventana() {
        initComponents();
        this.isTraining = false;
        this.heartRateSensor = new HeartRateSensor(20, 150);
        this.gpsSensor = new GpsSensor(19.54121, -96.92694, 1462.0);
        this.heartRateSensor.start();
        this.gpsSensor.start();
        new Thread(() -> {
            DecimalFormat latLongFormat = new DecimalFormat("#.000000");
            DecimalFormat eleFormat = new DecimalFormat("#.00");
            DecimalFormat velFormat = new DecimalFormat("#.000");
            while (true) {
                int currentHeartRate = this.heartRateSensor.getCurrentHeartRate();
                this.hrContinuo.setText(String.valueOf(currentHeartRate));
                
                double lat = this.gpsSensor.getCurrentLat();
                double longit = this.gpsSensor.getCurrentLong();
                double ele = this.gpsSensor.getCurrentEle();
                
                this.latitude.setText(latLongFormat.format(lat));
                this.longitude.setText(latLongFormat.format(longit));
                this.elevation.setText(eleFormat.format(ele));
                
                actualizarFechaHora(new Date());
                if (this.isTraining) {
                    this.training.addTrackpoint(new Trackpoint(lat, longit, ele, currentHeartRate));
                    
                    this.promFrecuencia.setText(String.valueOf(this.training.getAverageHeartRate()));
                    this.velocidadActual.setText(velFormat.format(this.training.getCurrentSpeed()));
                    this.velocidadProm.setText(velFormat.format(this.training.getAverageSpeed()));
                    this.distancia.setText(eleFormat.format(this.training.getTotalDistance()));
                    
                }
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        }).start();
    }
    
    private void actualizarFechaHora(Date date) {
        String patternHora;
        if (date.getSeconds() % 2 == 0) {
            patternHora = "hh:mm a";
        } else {
            patternHora = "hh mm a";
        }
        SimpleDateFormat formatterHora = new SimpleDateFormat(patternHora, Locale.forLanguageTag("es_MX"));
        this.hora.setText(formatterHora.format(date));
        
        String patternFecha = "dd-MMM-yyyy";
        SimpleDateFormat formatterFecha = new SimpleDateFormat(patternFecha, Locale.forLanguageTag("es_MX"));
        this.fecha.setText(formatterFecha.format(date));
    }

    private void showSendData() {
        TrainingData entrenamiento = new TrainingData();
        entrenamiento.setFecha(Instant.now().toString());
        entrenamiento.setPromedioHR(this.training.getAverageHeartRate());
        entrenamiento.setTiempo(this.stopWatch.getFinalTimeMillis());
        entrenamiento.setPromedioVel(this.training.getAverageSpeed());
        entrenamiento.setDistancia(this.training.getTotalDistance());
        
        new UploadDialog(this, entrenamiento).setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel jPanel1 = new JPanel();
        JLabel jLabel1 = new JLabel();
        hrContinuo = new JTextField();
        JLabel jLabel3 = new JLabel();
        latitude = new JTextField();
        longitude = new JTextField();
        JLabel jLabel4 = new JLabel();
        JLabel jLabel6 = new JLabel();
        JLabel jLabel7 = new JLabel();
        elevation = new JTextField();
        JLabel jLabel8 = new JLabel();
        JPanel jPanel2 = new JPanel();
        cronometro = new JLabel();
        iniciarEntr = new JButton();
        detenerEntr = new JButton();
        JLabel jLabel5 = new JLabel();
        promFrecuencia = new JTextField();
        JLabel jLabel2 = new JLabel();
        JLabel jLabel9 = new JLabel();
        velocidadActual = new JTextField();
        JLabel jLabel10 = new JLabel();
        velocidadProm = new JTextField();
        JLabel jLabel12 = new JLabel();
        JLabel jLabel13 = new JLabel();
        distancia = new JTextField();
        JLabel jLabel14 = new JLabel();
        JPanel jPanel4 = new JPanel();
        hora = new JLabel();
        fecha = new JLabel();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(BorderFactory.createTitledBorder("Sensores"));

        jLabel1.setText("FC");

        hrContinuo.setEditable(false);

        jLabel3.setText("GPS");

        latitude.setEditable(false);

        longitude.setEditable(false);

        jLabel4.setText("ppm");

        jLabel6.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel6.setText("LON");

        jLabel7.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel7.setText("LAT");

        elevation.setEditable(false);

        jLabel8.setHorizontalAlignment(SwingConstants.CENTER);
        jLabel8.setText("ELE");

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hrContinuo)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4))
                    .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(latitude)
                            .addComponent(longitude)
                            .addComponent(elevation))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(hrContinuo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(latitude, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(longitude, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(elevation, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel2.setBorder(BorderFactory.createTitledBorder("Entrenamiento"));

        cronometro.setFont(new Font("Lucida Grande", 0, 21)); // NOI18N
        cronometro.setHorizontalAlignment(SwingConstants.LEFT);
        cronometro.setIcon(new ImageIcon(getClass().getResource("/smartwatchsim/gui/assets/icons8-stopwatch.png"))); // NOI18N
        cronometro.setText("00:00:00:000");

        iniciarEntr.setText("Iniciar entrenamiento");
        iniciarEntr.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                iniciarEntrActionPerformed(evt);
            }
        });

        detenerEntr.setText("Detener entrenamiento");
        detenerEntr.setEnabled(false);
        detenerEntr.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                detenerEntrActionPerformed(evt);
            }
        });

        jLabel5.setText("FC promedio");

        promFrecuencia.setEditable(false);

        jLabel2.setText("ppm");

        jLabel9.setText("Velocidad actual - promedio");

        velocidadActual.setEditable(false);

        jLabel10.setText("km/h");

        velocidadProm.setEditable(false);

        jLabel12.setText("km/h");

        jLabel13.setText("Distancia recorrida");
        jLabel13.setToolTipText("");

        distancia.setEditable(false);

        jLabel14.setText("m");

        GroupLayout jPanel2Layout = new GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(promFrecuencia)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(velocidadActual, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(velocidadProm)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(distancia)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cronometro, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(iniciarEntr, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(detenerEntr, GroupLayout.Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cronometro)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iniciarEntr)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(detenerEntr)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(promFrecuencia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, GroupLayout.PREFERRED_SIZE, 16, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(velocidadActual, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(velocidadProm, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(distancia, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addContainerGap())
        );

        jPanel4.setBorder(BorderFactory.createTitledBorder("Fecha y hora"));

        hora.setFont(new Font("Lucida Grande", 0, 28)); // NOI18N
        hora.setText("00:00 AM");

        fecha.setHorizontalAlignment(SwingConstants.CENTER);
        fecha.setText("00-aaa-0000");

        GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(hora, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fecha, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hora)
                .addGap(18, 18, 18)
                .addComponent(fecha)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iniciarEntrActionPerformed(ActionEvent evt) {//GEN-FIRST:event_iniciarEntrActionPerformed
        if (this.stopWatch != null && this.stopWatch.isRunning()) {
            this.stopWatch.stopStopWatch();
        }
        this.stopWatch = new StopWatch(this.cronometro);
        this.stopWatch.start();
        this.isTraining = true;
        this.training = new Training();

        this.iniciarEntr.setEnabled(false);
        this.detenerEntr.setEnabled(true);
        
    }//GEN-LAST:event_iniciarEntrActionPerformed

    private void detenerEntrActionPerformed(ActionEvent evt) {//GEN-FIRST:event_detenerEntrActionPerformed

        this.isTraining = false;
        this.stopWatch.stopStopWatch();

        this.detenerEntr.setEnabled(false);
        this.iniciarEntr.setEnabled(true);

        showSendData();
    }//GEN-LAST:event_detenerEntrActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel cronometro;
    private JButton detenerEntr;
    private JTextField distancia;
    private JTextField elevation;
    private JLabel fecha;
    private JLabel hora;
    private JTextField hrContinuo;
    private JButton iniciarEntr;
    private JTextField latitude;
    private JTextField longitude;
    private JTextField promFrecuencia;
    private JTextField velocidadActual;
    private JTextField velocidadProm;
    // End of variables declaration//GEN-END:variables
}
